{"ast":null,"code":"var _jsxFileName = \"/Users/code/Desktop/Desktop - WEB/WEB/lab-sistemas/frontend/src/Components/LED.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { useQuery, useMutation, gql } from \"@apollo/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GET_CLIENTS = gql`\n  query {\n    clients {\n      id\n      state\n    }\n  }\n`;\nexport const EDIT_CLIENT = gql`\n  mutation editClient($editClientObject: EditClientInput!) {\n    editClient(editClientObject: $editClientObject) {\n      id\n      state\n    }\n  }\n`;\nconst LED = props => {\n  _s();\n  const [editClient, editClientInfo] = useMutation(EDIT_CLIENT);\n  const handleEdit = async (id, value) => {\n    const result = await editClient({\n      variables: {\n        editClientObject: {\n          id: id,\n          state: value\n        }\n      }\n    });\n  };\n  const [counter, setCounter] = useState(0);\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(GET_CLIENTS);\n  useEffect(() => {\n    if (data && data.clients) {\n      setCounter(parseInt(data.clients[props.number].state), 2);\n    }\n  }, [data]);\n  const increment = () => {\n    if (counter < 100) {\n      handleEdit(data.clients[props.number].id, (counter + 25).toString());\n      setCounter(counter + 25);\n    } else {\n      handleEdit(data.clients[props.number].id, \"0\");\n      setCounter(0);\n    }\n  };\n  console.log(data.clients[props.number].id);\n  if (counter == 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"LedSquare ledOff\",\n      onClick: increment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this);\n  } else if (counter == 25) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"LedSquare ledOn25\",\n      onClick: increment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this);\n  } else if (counter == 50) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"LedSquare ledOn50\",\n      onClick: increment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this);\n  } else if (counter == 75) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"LedSquare ledOn75\",\n      onClick: increment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"LedSquare ledOn100\",\n      onClick: increment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this);\n  }\n};\n_s(LED, \"MbyduOeHdRT1yin1k3Hn+FAdxAs=\", false, function () {\n  return [useMutation, useQuery];\n});\n_c = LED;\nexport default LED;\nvar _c;\n$RefreshReg$(_c, \"LED\");","map":{"version":3,"names":["React","useState","useContext","useEffect","useQuery","useMutation","gql","GET_CLIENTS","EDIT_CLIENT","LED","props","editClient","editClientInfo","handleEdit","id","value","result","variables","editClientObject","state","counter","setCounter","data","loading","error","clients","parseInt","number","increment","toString","console","log"],"sources":["/Users/code/Desktop/Desktop - WEB/WEB/lab-sistemas/frontend/src/Components/LED.js"],"sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\nimport { useQuery, useMutation, gql } from \"@apollo/client\";\n\nexport const GET_CLIENTS = gql`\n  query {\n    clients {\n      id\n      state\n    }\n  }\n`;\n\nexport const EDIT_CLIENT = gql`\n  mutation editClient($editClientObject: EditClientInput!) {\n    editClient(editClientObject: $editClientObject) {\n      id\n      state\n    }\n  }\n`;\n\n\nconst LED = (props) => {\n\n    const [editClient, editClientInfo] = useMutation(EDIT_CLIENT);\n\n    const handleEdit = async (id, value) => {\n        const result = await editClient({\n          variables: {\n            editClientObject: {\n              id: id,\n              state: value\n            }\n          }\n        });\n      };\n\n\n    const [counter, setCounter] = useState(0);\n    const { data, loading, error } = useQuery(GET_CLIENTS);\n  \n    useEffect(() => {\n      if (data && data.clients) {\n        setCounter(parseInt(data.clients[props.number].state), 2);\n      }\n    }, [data]);\n\n    const increment = () => {\n        if(counter < 100)\n        { \n            handleEdit(data.clients[props.number].id,(counter+25).toString());\n            setCounter(counter+25); \n        }else \n        {\n            handleEdit(data.clients[props.number].id, \"0\")\n            setCounter(0);  \n        }\n             \n    }; \n    console.log(data.clients[props.number].id);\n    if(counter == 0)\n    {\n        return(\n            <div className='LedSquare ledOff' onClick={increment}>\n                \n        </div>\n    );\n    }else if(counter == 25)\n    {\n        return(\n            <div className='LedSquare ledOn25' onClick={increment}>\n               \n           </div>\n        );  \n    }else if(counter == 50)\n    {\n        return(\n            <div className='LedSquare ledOn50' onClick={increment}>\n               \n           </div>\n        );  \n    }else if(counter == 75)\n    {\n        return(\n            <div className='LedSquare ledOn75' onClick={increment}>\n                \n           </div>\n        );  \n    }else\n    {\n        return(\n            <div className='LedSquare ledOn100' onClick={increment}>\n                \n           </div>\n        );  \n    }\n};\nexport default LED;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}