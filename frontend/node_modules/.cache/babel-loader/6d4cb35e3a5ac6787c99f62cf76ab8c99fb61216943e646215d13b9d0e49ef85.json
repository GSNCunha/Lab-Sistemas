{"ast":null,"code":"const {\n  SerialPort\n} = require('serialport');\nconst port = new SerialPort({\n  path: '/dev/cu.usbmodem14201',\n  baudRate: 9600\n});\nport.on('open', function () {\n  console.log('Serial Port Opened');\n});\nport.on('data', function (data) {\n  // convert the received data to an array of bytes\n  const bytes = Array.from(data);\n\n  // log the array of bytes to the console\n  console.log('Data:', bytes);\n});\nfunction sendBinary() {\n  port.write(Buffer.from([0b11100100]));\n}\nport.on('open', () => {\n  setInterval(sendBinary, 1000);\n});","map":{"version":3,"names":["SerialPort","require","port","path","baudRate","on","console","log","data","bytes","Array","from","sendBinary","write","Buffer","setInterval"],"sources":["/Users/code/Desktop/WEB/lab-sistemas/frontend/src/serial.js"],"sourcesContent":["const  { SerialPort } = require('serialport');\nconst port = new SerialPort({\n  path: '/dev/cu.usbmodem14201',\n  baudRate: 9600,\n});\nport.on('open', function() {\n  console.log('Serial Port Opened');\n});\n\nport.on('data', function(data) {\n    // convert the received data to an array of bytes\n    const bytes = Array.from(data);\n  \n    // log the array of bytes to the console\n    console.log('Data:', bytes);\n  });\n  \nfunction sendBinary() {\n  port.write(Buffer.from([0b11100100]));\n}\n\nport.on('open', () => {\n  setInterval(sendBinary, 1000);\n});\n"],"mappings":"AAAA,MAAO;EAAEA;AAAW,CAAC,GAAGC,OAAO,CAAC,YAAY,CAAC;AAC7C,MAAMC,IAAI,GAAG,IAAIF,UAAU,CAAC;EAC1BG,IAAI,EAAE,uBAAuB;EAC7BC,QAAQ,EAAE;AACZ,CAAC,CAAC;AACFF,IAAI,CAACG,EAAE,CAAC,MAAM,EAAE,YAAW;EACzBC,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;AACnC,CAAC,CAAC;AAEFL,IAAI,CAACG,EAAE,CAAC,MAAM,EAAE,UAASG,IAAI,EAAE;EAC3B;EACA,MAAMC,KAAK,GAAGC,KAAK,CAACC,IAAI,CAACH,IAAI,CAAC;;EAE9B;EACAF,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEE,KAAK,CAAC;AAC7B,CAAC,CAAC;AAEJ,SAASG,UAAU,GAAG;EACpBV,IAAI,CAACW,KAAK,CAACC,MAAM,CAACH,IAAI,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;AACvC;AAEAT,IAAI,CAACG,EAAE,CAAC,MAAM,EAAE,MAAM;EACpBU,WAAW,CAACH,UAAU,EAAE,IAAI,CAAC;AAC/B,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}