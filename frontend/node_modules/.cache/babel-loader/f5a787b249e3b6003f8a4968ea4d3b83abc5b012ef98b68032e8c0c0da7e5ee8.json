{"ast":null,"code":"var _jsxFileName = \"/Users/code/Desktop/Desktop - WEB/WEB/lab-sistemas/frontend/src/Components/LED.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from \"react\";\nimport { AppContext } from \"../App\";\nimport { converter } from \"../binconverter.js\";\nimport { useQuery, useMutation, gql } from \"@apollo/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GET_CLIENTS = gql`\n  query {\n    clients {\n      id\n      state\n    }\n  }\n`;\nconst LED = props => {\n  _s();\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(GET_CLIENTS);\n  const [counter, setCounter] = useState(0);\n  const {\n    setBin\n  } = useContext(AppContext);\n  const increment = () => {\n    if (counter < 100) {\n      setBin(converter(counter + 25, props.number));\n      setCounter(counter + 25);\n    } else {\n      setBin(converter(0, props.number));\n      setCounter(0);\n    }\n  };\n  if (counter == 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"LedSquare ledOff\",\n      onClick: increment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this);\n  } else if (counter == 25) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"LedSquare ledOn25\",\n      onClick: increment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this);\n  } else if (counter == 50) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"LedSquare ledOn50\",\n      onClick: increment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this);\n  } else if (counter == 75) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"LedSquare ledOn75\",\n      onClick: increment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"LedSquare ledOn100\",\n      onClick: increment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this);\n  }\n};\n_s(LED, \"Wcxf5CRuiPKaR9NwZgywvVTiKNE=\", false, function () {\n  return [useQuery];\n});\n_c = LED;\nexport default LED;\nvar _c;\n$RefreshReg$(_c, \"LED\");","map":{"version":3,"names":["React","useState","useContext","AppContext","converter","useQuery","useMutation","gql","GET_CLIENTS","LED","props","data","loading","error","counter","setCounter","setBin","increment","number"],"sources":["/Users/code/Desktop/Desktop - WEB/WEB/lab-sistemas/frontend/src/Components/LED.js"],"sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { AppContext } from \"../App\";\nimport {converter} from \"../binconverter.js\"\nimport { useQuery, useMutation, gql } from \"@apollo/client\";\n\nexport const GET_CLIENTS = gql`\n  query {\n    clients {\n      id\n      state\n    }\n  }\n`;\n\nconst LED = (props) => {\n\n    const { data, loading, error } = useQuery(GET_CLIENTS);\n    const [counter, setCounter] = useState(0);\n    const {setBin} = useContext(AppContext)\n\n    const increment = () => {\n        if(counter < 100)\n        {\n            setBin(converter(counter+25, props.number));\n            setCounter(counter+25);  \n            \n        }else \n        {\n            setBin(converter(0, props.number));\n            setCounter(0);  \n        }\n             \n    }; \n    if(counter == 0)\n    {\n        return(\n            <div className='LedSquare ledOff' onClick={increment}>\n                \n        </div>\n    );\n    }else if(counter == 25)\n    {\n        return(\n            <div className='LedSquare ledOn25' onClick={increment}>\n               \n           </div>\n        );  \n    }else if(counter == 50)\n    {\n        return(\n            <div className='LedSquare ledOn50' onClick={increment}>\n               \n           </div>\n        );  \n    }else if(counter == 75)\n    {\n        return(\n            <div className='LedSquare ledOn75' onClick={increment}>\n                \n           </div>\n        );  \n    }else\n    {\n        return(\n            <div className='LedSquare ledOn100' onClick={increment}>\n                \n           </div>\n        );  \n    }\n};\nexport default LED;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AACnD,SAASC,UAAU,QAAQ,QAAQ;AACnC,SAAQC,SAAS,QAAO,oBAAoB;AAC5C,SAASC,QAAQ,EAAEC,WAAW,EAAEC,GAAG,QAAQ,gBAAgB;AAAC;AAE5D,OAAO,MAAMC,WAAW,GAAGD,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAME,GAAG,GAAIC,KAAK,IAAK;EAAA;EAEnB,MAAM;IAAEC,IAAI;IAAEC,OAAO;IAAEC;EAAM,CAAC,GAAGR,QAAQ,CAACG,WAAW,CAAC;EACtD,MAAM,CAACM,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EACzC,MAAM;IAACe;EAAM,CAAC,GAAGd,UAAU,CAACC,UAAU,CAAC;EAEvC,MAAMc,SAAS,GAAG,MAAM;IACpB,IAAGH,OAAO,GAAG,GAAG,EAChB;MACIE,MAAM,CAACZ,SAAS,CAACU,OAAO,GAAC,EAAE,EAAEJ,KAAK,CAACQ,MAAM,CAAC,CAAC;MAC3CH,UAAU,CAACD,OAAO,GAAC,EAAE,CAAC;IAE1B,CAAC,MACD;MACIE,MAAM,CAACZ,SAAS,CAAC,CAAC,EAAEM,KAAK,CAACQ,MAAM,CAAC,CAAC;MAClCH,UAAU,CAAC,CAAC,CAAC;IACjB;EAEJ,CAAC;EACD,IAAGD,OAAO,IAAI,CAAC,EACf;IACI,oBACI;MAAK,SAAS,EAAC,kBAAkB;MAAC,OAAO,EAAEG;IAAU;MAAA;MAAA;MAAA;IAAA,QAEnD;EAEV,CAAC,MAAK,IAAGH,OAAO,IAAI,EAAE,EACtB;IACI,oBACI;MAAK,SAAS,EAAC,mBAAmB;MAAC,OAAO,EAAEG;IAAU;MAAA;MAAA;MAAA;IAAA,QAEjD;EAEb,CAAC,MAAK,IAAGH,OAAO,IAAI,EAAE,EACtB;IACI,oBACI;MAAK,SAAS,EAAC,mBAAmB;MAAC,OAAO,EAAEG;IAAU;MAAA;MAAA;MAAA;IAAA,QAEjD;EAEb,CAAC,MAAK,IAAGH,OAAO,IAAI,EAAE,EACtB;IACI,oBACI;MAAK,SAAS,EAAC,mBAAmB;MAAC,OAAO,EAAEG;IAAU;MAAA;MAAA;MAAA;IAAA,QAEjD;EAEb,CAAC,MACD;IACI,oBACI;MAAK,SAAS,EAAC,oBAAoB;MAAC,OAAO,EAAEA;IAAU;MAAA;MAAA;MAAA;IAAA,QAElD;EAEb;AACJ,CAAC;AAAC,GAvDIR,GAAG;EAAA,QAE4BJ,QAAQ;AAAA;AAAA,KAFvCI,GAAG;AAwDT,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}