{"ast":null,"code":"var _jsxFileName = \"/Users/code/Desktop/WEB/lab-sistemas/frontend/src/Components/LED.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { useQuery, useMutation, gql } from \"@apollo/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GET_CLIENTS = gql`\n  query {\n    clients {\n      id\n      state\n    }\n  }\n`;\nexport const EDIT_CLIENT = gql`\n  mutation editClient($editClientObject: EditClientInput!) {\n    editClient(editClientObject: $editClientObject) {\n      id\n      state\n    }\n  }\n`;\nconst LED = props => {\n  _s();\n  const [editClient, editClientInfo] = useMutation(EDIT_CLIENT);\n  const handleEdit = async (id, value) => {\n    const result = await editClient({\n      variables: {\n        editClientObject: {\n          id: id,\n          state: value\n        }\n      }\n    });\n  };\n  const [counter, setCounter] = useState(0);\n  const {\n    data,\n    loading,\n    error,\n    refetch\n  } = useQuery(GET_CLIENTS);\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      refetch();\n    }, 1000);\n    return () => clearInterval(intervalId);\n  }, [refetch]);\n  useEffect(() => {\n    if (data && data.clients) {\n      setCounter(parseInt(data.clients[props.number].state, 10));\n    }\n  }, [data]);\n  const increment = () => {\n    if (counter < 99) {\n      handleEdit(data.clients[props.number].id, (counter + 33).toString());\n      setCounter(counter + 33);\n    } else\n      //test\n      {\n        handleEdit(data.clients[props.number].id, \"0\");\n        setCounter(0);\n      }\n  };\n  if (counter === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"LedSquare ledOff\",\n      onClick: increment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this);\n  } else if (counter === 33) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"LedSquare ledOn25\",\n      onClick: increment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this);\n  } else if (counter === 66) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"LedSquare ledOn75\",\n      onClick: increment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"LedSquare ledOn100\",\n      onClick: increment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this);\n  }\n};\n_s(LED, \"IdL0/hMPi5pgJzdRYZuKQibpHaA=\", false, function () {\n  return [useMutation, useQuery];\n});\n_c = LED;\nexport default LED;\nvar _c;\n$RefreshReg$(_c, \"LED\");","map":{"version":3,"names":["React","useState","useContext","useEffect","useQuery","useMutation","gql","GET_CLIENTS","EDIT_CLIENT","LED","props","editClient","editClientInfo","handleEdit","id","value","result","variables","editClientObject","state","counter","setCounter","data","loading","error","refetch","intervalId","setInterval","clearInterval","clients","parseInt","number","increment","toString"],"sources":["/Users/code/Desktop/WEB/lab-sistemas/frontend/src/Components/LED.js"],"sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\nimport { useQuery, useMutation, gql } from \"@apollo/client\";\n\nexport const GET_CLIENTS = gql`\n  query {\n    clients {\n      id\n      state\n    }\n  }\n`;\n\nexport const EDIT_CLIENT = gql`\n  mutation editClient($editClientObject: EditClientInput!) {\n    editClient(editClientObject: $editClientObject) {\n      id\n      state\n    }\n  }\n`;\n\n\nconst LED = (props) => {\n\n    const [editClient, editClientInfo] = useMutation(EDIT_CLIENT);\n\n    const handleEdit = async (id, value) => {\n        const result = await editClient({\n          variables: {\n            editClientObject: {\n              id: id,\n              state: value\n            }\n          }\n        });\n      };\n\n\n    const [counter, setCounter] = useState(0);\n    const { data, loading, error, refetch } = useQuery(GET_CLIENTS);\n  \n    useEffect(() => {\n        const intervalId = setInterval(() => {\n            refetch();\n        }, 1000);\n\n        return () => clearInterval(intervalId);\n    }, [refetch]);\n\n    useEffect(() => {\n      if (data && data.clients) {\n        setCounter(parseInt(data.clients[props.number].state, 10));\n      }\n    }, [data]);\n\n    const increment = () => {\n        if(counter < 99)\n        { \n            handleEdit(data.clients[props.number].id,(counter+33).toString());\n            setCounter(counter+33); \n\n        }else//test\n          {\n            handleEdit(data.clients[props.number].id, \"0\")\n            setCounter(0);  \n        }\n             \n    }; \n\n    if(counter === 0)\n    {\n        return(\n            <div className='LedSquare ledOff' onClick={increment}>\n                \n        </div>\n    );\n    }else if(counter === 33)\n    {\n        return(\n            <div className='LedSquare ledOn25' onClick={increment}>\n               \n           </div>\n        );  \n    }else if(counter === 66)\n    {\n        return(\n            <div className='LedSquare ledOn75' onClick={increment}>\n                \n           </div>\n        );  \n    }else\n    {\n        return(\n            <div className='LedSquare ledOn100' onClick={increment}>\n                \n           </div>\n        );  \n    }\n};\n\nexport default LED;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}